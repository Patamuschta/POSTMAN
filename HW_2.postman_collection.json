{
	"info": {
		"_postman_id": "2df86d93-6f9c-4df6-91c1-769ff85e665e",
		"name": "HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"http://162.55.220.72:5005/first",
							"// 1. Отправить запрос.",
							"// 2. Статус код 200",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// 3. Проверить, что в body приходит правильный string.",
							"",
							"//вариант 1",
							"pm.test(\"в body приходит правильный string\", function () {",
							"    pm.response.to.have.body(\"This is the first responce from server!ss\");",
							"});",
							"",
							"//вариант 2",
							"pm.test(\"Body contains string\",() => {",
							"  pm.expect(pm.response.text()).to.include(\"This is the first responce from server!ss\");",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5007/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5007",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// http://162.55.220.72:5005/user_info_3",
							"// 1. Отправить запрос.",
							"// 2. Статус код 200",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// 3. Спарсить response body в json.",
							"let responseData = pm.response.json();",
							"",
							"console.log(\"3.  \", responseData);",
							"",
							"// 4. Проверить, что name в response равно name s request (name вбить руками.)",
							"  ",
							"  let name_request = \"Marina\"",
							"  let name_response = responseData.name",
							"",
							"  pm.test(\"name_request\", function () {",
							"    pm.expect(name_response).to.eql(name_request);",
							"});",
							"",
							"console.log(\"4. \", name_request, name_response);",
							"",
							"// 5. Проверить, что age в response равно age s request (age вбить руками.)",
							"  ",
							"  let age_request = \"43\"",
							"  let age_response = responseData.age",
							"",
							"pm.test(\"age_request\", function () {",
							"    pm.expect(age_response).to.eql(age_request);",
							"});",
							"",
							"console.log(\"5. \", age_request, age_response);",
							"",
							"// 6. Проверить, что salary в response равно salary s request (salary вбить руками.)",
							"",
							"  let salary_request = 3000",
							"  let salary_response = responseData.salary",
							"",
							"pm.test(\"salary_response_chek\", function () {",
							"    pm.expect(salary_response).to.eql(salary_request);",
							"});",
							"",
							"console.log(\"6. \", salary_request, salary_response);",
							"",
							"// 7. Спарсить request.",
							"",
							"let req = request.data;",
							"// console.log(typeof(req));",
							"console.log(\"7.  \", req);",
							"",
							"// 8. Проверить, что name в response равно name s request (name забрать из request.)",
							"let req_name = req.name;",
							"",
							"pm.test(\"name в response равно name s request\", function () {",
							"    pm.expect(responseData.name).to.eql(req_name);",
							"});",
							"",
							"console.log(\" 8. \", responseData.name, req_name);",
							"",
							"// 9. Проверить, что age в response равно age s request (age забрать из request.)",
							"let req_age = req.age;",
							"",
							"pm.test(\"age в response равно age s request\", function () {",
							"    pm.expect(responseData.age).to.eql(req_age);",
							"});",
							"",
							"console.log(\" 9. \", responseData.age, req_age);",
							"",
							"// 10. Проверить, что salary в response равно salary s request (salary забрать из request.)",
							"let req_salary = +req.salary;",
							"",
							"pm.test(\"salary в response равно salary s request\", function () {",
							"    pm.expect(responseData.salary).to.eql(req_salary);",
							"});",
							"",
							"console.log(\" 10. \", responseData.salary, req_salary);",
							"",
							"// 11. Вывести в консоль параметр family из response.",
							"console.log(\" 11. \",responseData.family)",
							"",
							"// 12. Проверить что u_salary_1_5_year в response равно salary*4 (salary забрать из request)",
							"",
							"let salary_chek_4 = req_salary * 4;",
							"let salary_4_year = responseData.family.u_salary_1_5_year;",
							"",
							"pm.test(\"u_salary_1_5_year в response равно salary*4 \", function () {",
							"    pm.expect(salary_4_year).to.eql(salary_chek_4);",
							"});",
							"",
							"console.log(\" 12. \", salary_chek_4, salary_4_year);",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "43",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "3000",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Marina",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5007/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5007",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// http://162.55.220.72:5005/object_info_3",
							"// 1. Отправить запрос.",
							"// 2. Статус код 200",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// 3. Спарсить response body в json.",
							"let responsData = pm.response.json();",
							"console.log(responsData)",
							"",
							"// 4. Спарсить request.",
							"// // вариант 1",
							"// let query = {}; pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
							"// console.log(query);",
							"",
							"// вариант 2",
							"let requestData = pm.request.url.query.toObject()",
							"console.log(requestData)",
							"",
							"",
							"// 5. Проверить, что name в response равно name s request (name забрать из request.)",
							"let requestName = pm.request.url.query.get('name');",
							"",
							"console.log(requestName, responsData.name);",
							"",
							"pm.test(\"name в response равно name s request\", function () {",
							"    pm.expect(responsData.name).to.eql(requestName);",
							"});",
							"",
							"// 6. Проверить, что age в response равно age s request (age забрать из request.)",
							"",
							"let requestAge = pm.request.url.query.get('age');",
							"",
							"console.log(requestAge, responsData.age);",
							"",
							"pm.test(\"name в response равно name s request\", function () {",
							"    pm.expect(responsData.age).to.eql(requestAge);",
							"});",
							"",
							"// 7. Проверить, что salary в response равно salary s request (salary забрать из request.)",
							"let requestSalary = +pm.request.url.query.get('salary');",
							"let resp_salary = +responsData.salary;",
							"console.log(requestSalary, resp_salary);",
							"",
							"pm.test(\"name в response равно name s request\", function () {",
							"    pm.expect(resp_salary).to.eql(requestSalary);",
							"});",
							"",
							"// 8. Вывести в консоль параметр family из response.",
							"console.log(responsData.family)",
							"",
							"// 9. Проверить, что у параметра dog есть параметры name.",
							"",
							"pm.test(\"у параметра dog есть параметры name\", function () {",
							"    pm.expect(responsData.family.pets.dog).to.have.property(\"name\")",
							"})",
							"",
							"// 11. Проверить, что параметр name имеет значение Luky.",
							"pm.test(\"параметр name имеет значение Luky\", function () {",
							"    pm.expect(responsData.family.pets.dog.name).to.deep.include(\"Luky\")",
							"})",
							"",
							"// 12. Проверить, что параметр age имеет значение 4.",
							"pm.test(\"параметр age имеет значение 4\", function () {",
							"    pm.expect(responsData.family.pets.dog.age).to.deep.equal(4)",
							"})",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Elena",
							"type": "text",
							"disabled": true
						},
						{
							"key": "age",
							"value": "30",
							"type": "text",
							"disabled": true
						},
						{
							"key": "salary",
							"value": "10000",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5007/object_info_3?name=Elena&age=30&salary=10000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5007",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Elena"
						},
						{
							"key": "age",
							"value": "30"
						},
						{
							"key": "salary",
							"value": "10000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Отправить запрос.\r",
							"// 2. Статус код 200\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 3. Спарсить response body в json.\r",
							"\r",
							"let responsData = pm.response.json();\r",
							"console.log(responsData)\r",
							"\r",
							"// 4. Спарсить request.\r",
							"let requestData = pm.request.url.query.toObject()\r",
							"console.log(requestData)\r",
							"\r",
							"// 5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"\r",
							"let requestName = pm.request.url.query.get('name');\r",
							"\r",
							"console.log(requestName, responsData.name);\r",
							"\r",
							"pm.test(\"name в response равно name s request\", function () {\r",
							"    pm.expect(responsData.name).to.eql(requestName);\r",
							"});\r",
							"\r",
							"// 6. Проверить, что age в ответе равно age из request (age забрать из request.)\r",
							"let requestAge = +pm.request.url.query.get('age');\r",
							"\r",
							"console.log(requestAge, responsData.age);\r",
							"\r",
							"pm.test(\"name в response равно name s request\", function () {\r",
							"    pm.expect(responsData.age).to.eql(requestAge);\r",
							"});\r",
							"\r",
							"// 7. Вывести в консоль параметр salary из request.\r",
							"\r",
							"console.log(requestData.salary);\r",
							"\r",
							"// 8. Вывести в консоль параметр salary из response.\r",
							"\r",
							"console.log(responsData.salary);\r",
							"\r",
							"\r",
							"// 9. Вывести в консоль 0-й элемент параметра salary из response.\r",
							"\r",
							"console.log(responsData.salary[0]);\r",
							"\r",
							"\r",
							"// 10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"\r",
							"console.log(responsData.salary[1]);\r",
							"\r",
							"// 11. Вывести в консоль 2-й элемент параметра salary параметр salary из response.\r",
							"\r",
							"console.log(responsData.salary[2]);\r",
							"\r",
							"// 12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"\r",
							"\r",
							"// 13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"\r",
							"\r",
							"// 14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
							"\r",
							"\r",
							"// 15. Создать в окружении переменную name\r",
							"\r",
							"\r",
							"// 16. Создать в окружении переменную age\r",
							"\r",
							"\r",
							"// 17. Создать в окружении переменную salary\r",
							"\r",
							"\r",
							"// 18. Передать в окружение переменную name\r",
							"\r",
							"\r",
							"// 19. Передать в окружение переменную age\r",
							"\r",
							"\r",
							"// 20. Передать в окружение переменную salary\r",
							"\r",
							"\r",
							"// 21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Elena",
							"type": "text",
							"disabled": true
						},
						{
							"key": "age",
							"value": "30",
							"type": "text",
							"disabled": true
						},
						{
							"key": "salary",
							"value": "10000",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5007/object_info_4?name=Ivan&age=30&salary=5000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5007",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Ivan"
						},
						{
							"key": "age",
							"value": "30"
						},
						{
							"key": "salary",
							"value": "5000"
						}
					]
				}
			},
			"response": []
		}
	]
}