{
	"info": {
		"_postman_id": "c8a0364f-bc2e-4505-9f21-887da03a317e",
		"name": "gr_29",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "The_first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"let person = {",
							"    \"age\": \"20\",",
							"    \"family\": {",
							"        \"children\": [[\"Alex\",24],[\"Kate\",12]],",
							"        \"u_salary_1_5_year\": 6000",
							"    },",
							"    \"name\": \"Alex\",",
							"    \"salary\": 1500",
							"};",
							"",
							"let item_1 = \"Alex\"",
							"pm.test(\"Item_1 Test\", function () {",
							"",
							"    pm.expect(item_1).to.equal(\"Alex\")",
							"    // pm.expect(tt2.salary).to.eql(1000);",
							"})",
							"",
							"",
							"pm.test(\"Item_2 Person\", function () {",
							"    pm.expect(+person.age).to.deep.equal(20)",
							"    // pm.expect(tt2.salary).to.eql(1000);",
							"})",
							"",
							"pm.test(\"Item_3 Person\", function () {",
							"    pm.expect(person.family.children[0][1]).to.deep.equal(24)",
							"})",
							"",
							"pm.test(\"Item_4 Person\", function () {",
							"    pm.expect(person).to.have.property(\"name\")",
							"})",
							"",
							"pm.test(\"Item_5 Person\", function () {",
							"    pm.expect(person).to.deep.include({\"salary\": 1500})",
							"})",
							"",
							"pm.test(\"Item_6 Person\", function () {",
							"    pm.expect(person.family.children[1]).to.deep.include(\"Kate\")",
							"})",
							"",
							"pm.test(\"Item_7 Person\", function () {",
							"    pm.expect(person.family.children[1]).to.be.a(\"Array\")",
							"})",
							"",
							"// проверить что 12 является числом",
							"pm.test(\"Item_8 Person\", function () {",
							"    pm.expect(person.family.children[1][1]).to.be.a(\"Number\")",
							"})",
							"",
							"// проверить что \"Kate\" является строкой",
							"pm.test(\"Item_9 Person\", function () {",
							"    pm.expect(person.family.children[1][0]).to.be.a(\"String\")",
							"})",
							"",
							"// проверить что \"name\": \"Alex\", является строкой",
							"pm.test(\"Item_10 Person\", function () {",
							"    pm.expect(person.name).to.be.a(\"String\")",
							"})",
							"",
							"// проверить на тип данных Массив и что есть значение 12",
							"pm.test(\"Item_11 Person\", function () {",
							"    pm.expect(person.family.children[1]).to.be.an(\"Array\").that.include(12)",
							"})",
							"",
							"// проверить что  Массив  равен другому Массиву",
							"pm.test(\"Item_11 Person\", function () {",
							"    pm.expect(person.family.children[0]).to.eql([\"Alex\",24])",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "20",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1500",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Alex",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "/s34lfgbj/Vadim/jjd909/12242kjkWpqc322823r23r3r457271evny",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5007/get_test_user",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5007",
					"path": [
						"get_test_user"
					]
				}
			},
			"response": []
		}
	]
}